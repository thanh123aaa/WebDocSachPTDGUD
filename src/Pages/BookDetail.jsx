import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Container, Card, Button, Modal } from "react-bootstrap";
import { products } from "../Pages/Home"; // ‚úÖ Import danh s√°ch s√°ch

function BookDetail() {
  const { id } = useParams(); // ‚úÖ L·∫•y ID s√°ch t·ª´ URL
  const navigate = useNavigate(); // ‚úÖ ƒêi·ªÅu h∆∞·ªõng trang
  const book = products.find((item) => item.id === parseInt(id, 10));
  const [showModal, setShowModal] = useState(false);

  useEffect(() => {
    // Kh·ªüi t·∫°o gi·ªè h√†ng n·∫øu ch∆∞a c√≥ trong Local Storage
    if (!localStorage.getItem("cart")) {
      localStorage.setItem("cart", JSON.stringify([]));
    }
  }, []);

  const handleAddToCart = () => {
    if (!book) return;

    // L·∫•y gi·ªè h√†ng t·ª´ Local Storage
    let cart = JSON.parse(localStorage.getItem("cart")) || [];

    // Ki·ªÉm tra n·∫øu s√°ch ƒë√£ c√≥ trong gi·ªè h√†ng
    const existingItem = cart.find((item) => item.id === book.id);
    if (existingItem) {
      existingItem.quantity += 1;
    } else {
      cart.push({ ...book, quantity: 1 });
    }

    // L∆∞u l·∫°i gi·ªè h√†ng v√†o Local Storage
    localStorage.setItem("cart", JSON.stringify(cart));

    // Hi·ªÉn th·ªã modal
    setShowModal(true);
  };

  if (!book) {
    return <h2 className="text-center text-white mt-5">S√°ch kh√¥ng t·ªìn t·∫°i!</h2>;
  }

  return (
    <Container className="mt-5 d-flex justify-content-center">
      <Card className="book-detail-card">
        <Card.Img variant="top" src={book.image} className="book-detail-img" />
        <Card.Body>
          <h2 className="text-center">{book.title}</h2>
          <p className="text-muted text-center">{book.category}</p>
          <h4 className="text-danger text-center">
  {isNaN(Number(book.price.replace(/[^\d]/g, "")))
    ? book.price  // N·∫øu kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi, gi·ªØ nguy√™n chu·ªói (VD: "Mi·ªÖn ph√≠")
    : `${new Intl.NumberFormat("vi-VN").format(Number(book.price.replace(/[^\d]/g, "")))} ‚Ç´`}
</h4>

          <p className="book-description">
            ƒê√¢y l√† m√¥ t·∫£ chi ti·∫øt v·ªÅ cu·ªën s√°ch n√†y. B·∫°n c√≥ th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin t·∫°i ƒë√¢y.
          </p>
          <Button variant="success" className="w-100" onClick={handleAddToCart}>
            Th√™m V√†o Gi·ªè H√†ng
          </Button>
        </Card.Body>
      </Card>

      {/* Modal Th√™m v√†o gi·ªè h√†ng th√†nh c√¥ng */}
      <Modal show={showModal} onHide={() => setShowModal(false)} centered>
        <Modal.Header closeButton style={{ backgroundColor: "#222", borderBottom: "none" }}>
          <Modal.Title className="text-white">üéâ ƒê√£ th√™m v√†o gi·ªè h√†ng!</Modal.Title>
        </Modal.Header>
        <Modal.Body className="text-center text-white" style={{ backgroundColor: "#333" }}>
          S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng. B·∫°n mu·ªën?
        </Modal.Body>
        <Modal.Footer style={{ backgroundColor: "#222", borderTop: "none" }}>
          <Button
            style={{
              backgroundColor: "transparent",
              border: "2px solid white",
              color: "white",
              fontWeight: "bold",
              padding: "8px 20px",
            }}
            onMouseOver={(e) => (e.target.style.backgroundColor = "rgba(255, 255, 255, 0.2)")}
            onMouseOut={(e) => (e.target.style.backgroundColor = "transparent")}
            onClick={() => navigate("/")}
          >
            üè† V·ªÅ trang ch·ªß
          </Button>
          <Button
            style={{
              backgroundColor: "transparent",
              border: "2px solid white",
              color: "white",
              fontWeight: "bold",
              padding: "8px 20px",
            }}
            onMouseOver={(e) => (e.target.style.backgroundColor = "rgba(255, 255, 255, 0.2)")}
            onMouseOut={(e) => (e.target.style.backgroundColor = "transparent")}
            onClick={() => navigate("/giohang")}
          >
            üõí Xem gi·ªè h√†ng
          </Button>
        </Modal.Footer>
      </Modal>
    </Container>
  );
}

export default BookDetail;
